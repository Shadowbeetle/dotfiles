" Syntax highlighting
" ===================
filetype on
filetype plugin on
filetype indent on
syntax enable
syntax on

set tabstop=2           " when indenting with '>', use 2 spaces width
set shiftwidth=2        " On pressing tab, insert 2 spaces
set expandtab           " use spaces instead of tabs
set autoindent
set smartindent
set smarttab
set number              " turn line numbering on
set undofile
set undolevels=1000
set autochdir           " change directory to currently edited file
set list                " show non printable characters
set listchars=tab:▸\ ,eol:¬,extends:❯,precedes:❮,space:·
set cursorcolumn        " highlight current column

nnoremap <C-n> O<Esc>0
nnoremap <C-m> o<Esc>0k

nnoremap <leader>df :w !diff % -<cr>

nnoremap <leader>ev :vsplit $MYVIMRC<cr> " edit vimrc in a different split screen
nnoremap <leader>sv :source $MYVIMRC<cr> " source vimrc

augroup markdown
  au!
  au FileType markdown :iabbrev <buffer> --- —
  au FileType markdown :inoremap <buffer> ** ****<left><left>
  au FileType markdown :inoremap <buffer> _ __<left>
  au FileType markdown :inoremap <buffer> <C-b> ****<left><left>
  au FileType markdown :inoremap <buffer> <C-l> __<left>
  au FileType markdown :set list!
augroup END

" Only show cursorcolumn in the current window and in normal mode.
augroup cline
  au!
  au InsertEnter * set nocursorcolumn
  au InsertLeave * set cursorcolumn
augroup END
"
" Plugins
" ===================
call plug#begin('~/.vim/bundle')
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'

Plug 'airblade/vim-gitgutter'       " Nice git lines at the side

Plug 'tpope/vim-surround'           " Surround
Plug 'tpope/vim-commentary'         " Commentary
Plug 'tpope/vim-markdown', { 'for': 'markdown' }

Plug 'easymotion/vim-easymotion'    " AceJump like movement
Plug 'scrooloose/nerdtree'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'pangloss/vim-javascript'      " JavaScript syntax highlighting
Plug 'Raimondi/delimitMate'
Plug 'vim-airline/vim-airline'      " vim powerline
Plug 'vim-airline/vim-airline-themes'
Plug 'vim-scripts/vim-auto-save'
" Colorschemes
" =====================

Plug 'dracula/vim', { 'as': 'dracula' }

" For writing
" ====================
Plug 'junegunn/limelight.vim', { 'on': 'Limelight' }     " Focusing tool
Plug 'junegunn/goyo.vim', { 'on': 'Limelight' }          " Focusing tool
Plug 'rhysd/vim-grammarous', { 'on': 'GrammarousCheck' } " English spell check
call plug#end()

" YouCompleteMe
" ===================
let g:ycm_global_ycm_extra_conf = '/usr/share/vim/vimfiles/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py'
let g:ycm_server_python_interpreter = '/usr/bin/python2'
let g:ycm_key_list_select_completion = ['<Down>']
let g:ycm_key_list_previous_completion = ['<Up>']
let g:ycm_key_list_stop_completion = ['<C-y>', '<TAB>']

nnoremap gd :YcmCompleter GoToDefinition<CR>
nnoremap gr :YcmCompleter GoToReferences<CR> 

" EasyMotion
" ===================
" n-character search 
map  / <Plug>(easymotion-sn)
omap / <Plug>(easymotion-tn)
let g:EasyMotion_smartcase = 1

" These `n` & `N` mappings are optional. You do not have to map `n` & `N` to EasyMotion.
" Without these mappings, `n` & `N` works fine. (These mappings just provide
" different highlight method and have some other features )
map  n <Plug>(easymotion-next)
map  N <Plug>(easymotion-prev)

" NERDTree
" ==================
nnoremap <silent> <leader>m :NERDTreeToggle<CR>

" GitGutter
" =========
nmap ]h <Plug>GitGutterNextHunk
nmap [h <Plug>GitGutterPrevHunk
nmap <Leader>ha <Plug>GitGutterStageHunk
nmap <Leader>hr <Plug>GitGutterUndoHunk

" Fzf
" =======
imap <c-x><c-l> <plug>(fzf-complete-line)
imap <c-x><c-f> <plug>(fzf-complete-path)
nmap <C-p> :GFiles<CR>
let g:fzf_layout = { 'down': '20%' }

" Limelight
" =========
" Color name (:help cterm-colors) or ANSI code
let g:limelight_conceal_ctermfg = 'gray'
let g:limelight_conceal_ctermfg = 240

" Color name (:help gui-colors) or RGB color
let g:limelight_conceal_guifg = 'DarkGray'
let g:limelight_conceal_guifg = '#777777'

let g:limelight_default_coefficient=0.7
nnoremap <leader>f :Limelight!!<cr>

" Dracula
" =======

color dracula

" Airline
" =======
let g:airline_powerline_fonts=0

" Autosave
" ========

let g:auto_save = 1 
